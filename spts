local replicated_storage = game:GetService("ReplicatedStorage")
local players = game:GetService("Players")

local camera = workspace.CurrentCamera
local utility = require(replicated_storage:WaitForChild("Modules"):WaitForChild("Utility"))

local function get_players()
    local entities = {}

    for _, child in ipairs(workspace:GetChildren()) do
        if child:FindFirstChildOfClass("Humanoid") and child:IsA("Model") then
            table.insert(entities, child)
        elseif child.Name == "HurtEffect" then
            for _, hurt_player in ipairs(child:GetChildren()) do
                if hurt_player.ClassName ~= "Highlight" then
                    table.insert(entities, hurt_player)
                end
            end
        end
    end

    return entities
end

local function get_closest_player()
    local closest, closest_distance = nil, math.huge
    local character = players.LocalPlayer.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") then
        return
    end

    for _, player in ipairs(get_players()) do
        if player == character then
            continue
        end

        local hrp = player:FindFirstChild("HumanoidRootPart")
        if not hrp then
            continue
        end

        local position, on_screen = camera:WorldToViewportPoint(hrp.Position)
        if not on_screen then
            continue
        end

        local center = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)
        local distance = (center - Vector2.new(position.X, position.Y)).Magnitude

        if distance < closest_distance then
            closest = player
            closest_distance = distance
        end
    end

    return closest
end

-- 防止被一眼檢測出來 (保留舊函式指標, 並且在極小範圍內自動瞄準)
local old_ray = utility.Raycast
utility.Raycast = function(...)
    local args = {...}

    -- 加一層隨機，避免每次都剛好100%打到頭（很可疑）
    if #args > 0 and args[4] == 999 then
        local closest = get_closest_player()

        if closest and closest:FindFirstChild("Head") then
            local head_pos = closest.Head.Position
            -- 加入小範圍隨機偏移 (模擬人類微微瞄歪)
            local random_offset = Vector3.new(
                math.random(-3, 3) / 100, -- 偏移最大 +-0.03 studs
                math.random(-3, 3) / 100,
                math.random(-3, 3) / 100
            )
            args[3] = head_pos + random_offset
        end
    end

    return old_ray(unpack(args))
end